
@misc{mukala_mining_2023,
	title = {Mining {Reviews} in {Open} {Source} {Code} for {Developers} {Trail}: {A} {Process} {Mining} {Approach}},
	shorttitle = {Mining {Reviews} in {Open} {Source} {Code} for {Developers} {Trail}},
	url = {http://arxiv.org/abs/2308.00686},
	doi = {10.48550/arXiv.2308.00686},
	abstract = {Audit trails are evidential indications of activities performers in any logs. Modern reactive systems such as transaction processing systems, management information systems, decision support systems and even executive management systems log activities of users as they perform their daily tasks for a number of reasons and perhaps one of the most important is security. In order to efficiently monitor and manage privacy and access to information, the trails as captured and recorded in these logs play a pivotal role in this regard. In Open Source realm, however, this is not the case. Although the objective with free software is to allow for access, free distribution and the rights to modify coding, having such audit trails can help to trace and understand how active members of these communities are and the type of activities they perform. In this paper, we propose using process mining to construct logs using as much data as can be found in open source repositories in order to produce a process model, also called a workflow net that graphical depicts the sequential occurrence of developers activities. Our method is exhibited through a simple algorithm called Act-Trace.},
	urldate = {2025-03-15},
	publisher = {arXiv},
	author = {Mukala, Patrick},
	month = jul,
	year = {2023},
	note = {arXiv:2308.00686 [cs]},
	keywords = {Computer Science - Software Engineering, TO-READ, Computer Science - Information Retrieval},
	file = {Preprint PDF:/home/georgefkd/Zotero/storage/I7SY3AWP/Mukala - 2023 - Mining Reviews in Open Source Code for Developers Trail A Process Mining Approach.pdf:application/pdf;Snapshot:/home/georgefkd/Zotero/storage/IGDZWWYL/2308.html:text/html},
}

@inproceedings{xia_hybrid_2017,
	title = {A hybrid approach to code reviewer recommendation with collaborative filtering},
	url = {https://ieeexplore.ieee.org/document/8100850/?arnumber=8100850},
	doi = {10.1109/SOFTWAREMINING.2017.8100850},
	abstract = {Code review is known to be of paramount importance for software quality assurance. However, finding a reviewer for certain code can be very challenging in Modern Code Review environment due to the difficulty of learning the expertise and availability of candidate reviewers. To tackle this problem, existing efforts mainly concern how to model a reviewer's expertise with the review history, and making recommendation based on how well a reviewer's expertise can meet the requirement of a review task. Nonetheless, as there are both explicit and implicit relations in data that affect whether a reviewer is suitable for a given task, merely modeling review expertise with explicit relations often fails to achieve expected recommendation accuracy. To that end, we propose a recommendation algorithm that takes implicit relations into account. Furthermore, we utilize a hybrid approach that combines latent factor models and neighborhood methods to capture implicit relations. Finally, we have conducted extensive experiments by comparing with the state-of-the-art methods using the data of 5 popular GitHub projects. The results demonstrate that our approach outperforms the comparing methods for all top-k recommendations and reaches a 15.3\% precision promotion in top-1 recommendation.},
	urldate = {2025-03-15},
	booktitle = {2017 6th {International} {Workshop} on {Software} {Mining} ({SoftwareMining})},
	author = {Xia, Zhenglin and Sun, Hailong and Jiang, Jing and Wang, Xu and Liu, Xudong},
	month = nov,
	year = {2017},
	keywords = {Software, TO-READ, Algorithm design and analysis, Code reviewer, Collaboration, collaborative filtering, Data models, Feature extraction, Filtering, github},
	pages = {24--31},
	file = {Full Text PDF:/home/georgefkd/Zotero/storage/LZ74S2HD/Xia et al. - 2017 - A hybrid approach to code reviewer recommendation with collaborative filtering.pdf:application/pdf;IEEE Xplore Abstract Record:/home/georgefkd/Zotero/storage/7FSV8TXX/8100850.html:text/html},
}

@inproceedings{thongtanunam_who_2015,
	title = {Who should review my code? a file location-based code-reviewer recommendation approach for modern code review},
	shorttitle = {Who should review my code?},
	url = {https://ieeexplore.ieee.org/abstract/document/7081824/},
	urldate = {2025-03-15},
	booktitle = {2015 {IEEE} 22nd {International} {Conference} on {Software} {Analysis}, {Evolution}, and {Reengineering} ({SANER})},
	publisher = {IEEE},
	author = {Thongtanunam, Patanamon and Tantithamthavorn, Chakkrit and Kula, Raula Gaikovina and Yoshida, Norihiro and Iida, Hajimu and Matsumoto, Ken-ichi},
	year = {2015},
	keywords = {TO-READ},
	pages = {141--150},
	file = {Available Version (via Google Scholar):/home/georgefkd/Zotero/storage/NZ3HIZAB/Thongtanunam et al. - 2015 - Who should review my code a file location-based code-reviewer recommendation approach for modern co.pdf:application/pdf},
}

@inproceedings{bosu_modeling_2013,
	title = {Modeling modern code review practices in open source software development organizations},
	url = {https://www.academia.edu/download/32321792/IDoESE.pdf},
	urldate = {2025-03-11},
	booktitle = {Proceedings of the 11th international doctoral symposium on empirical software engineering},
	author = {Bosu, Amiangshu},
	year = {2013},
	keywords = {TO-READ},
	file = {Available Version (via Google Scholar):/home/georgefkd/Zotero/storage/PH2V6AIX/Bosu - 2013 - Modeling modern code review practices in open source software development organizations.pdf:application/pdf},
}

@misc{roseler_network_2023,
	title = {A {Network} {Perspective} on the {Influence} of {Code} {Review} {Bots} on the {Structure} of {Developer} {Collaborations}},
	url = {http://arxiv.org/abs/2304.14787},
	doi = {10.48550/arXiv.2304.14787},
	abstract = {Background: Despite a growing body of literature on the impact of software bots on open source software development teams, their effects on team communication, coordination, and collaboration practices are not well understood. Bots can have negative consequences, such as producing information overload or reducing interactions between developers. Objective: The objective of this study is to investigate the effect of specific GitHub Actions on the collaboration networks of Open Source Software teams, using a network-analytic approach. The study will focus on Code Review bots, one of the most frequently implemented types of bots. Method: Fine-grained, time-stamped data of co-editing networks, developer-file contribution networks, as well as workflow runs and git commit logs will be obtained from a large sample of GitHub repositories. This will allow us to study how bots affect the collaboration networks of developers over time. By using a more representative sample of GitHub repositories than previous studies, which includes projects whose sizes span the whole range of Open Source communities, this study will provide generalizable results and updated findings on the general usage and distribution of GitHub Actions. With this study, we aim to contribute to advancing our knowledge of human-bot interaction and the effects of support tools on software engineering teams.},
	urldate = {2025-03-11},
	publisher = {arXiv},
	author = {Röseler, Leonore and Scholtes, Ingo and Gote, Christoph},
	month = may,
	year = {2023},
	note = {arXiv:2304.14787 [cs]},
	keywords = {Computer Science - Software Engineering, TO-READ, Computer Science - Social and Information Networks},
	file = {Preprint PDF:/home/georgefkd/Zotero/storage/TVH3W5TV/Röseler et al. - 2023 - A Network Perspective on the Influence of Code Review Bots on the Structure of Developer Collaborati.pdf:application/pdf},
}

@inproceedings{thompson_large-scale_2017,
	address = {Toronto Canada},
	title = {A {Large}-{Scale} {Study} of {Modern} {Code} {Review} and {Security} in {Open} {Source} {Projects}},
	isbn = {978-1-4503-5305-2},
	url = {https://dl.acm.org/doi/10.1145/3127005.3127014},
	doi = {10.1145/3127005.3127014},
	language = {en},
	urldate = {2025-03-05},
	booktitle = {Proceedings of the 13th {International} {Conference} on {Predictive} {Models} and {Data} {Analytics} in {Software} {Engineering}},
	publisher = {ACM},
	author = {Thompson, Christopher and Wagner, David},
	month = nov,
	year = {2017},
	keywords = {READ, CITE},
	pages = {83--92},
	file = {Available Version (via Google Scholar):/home/georgefkd/Zotero/storage/AH9AC6IV/Thompson and Wagner - 2017 - A Large-Scale Study of Modern Code Review and Security in Open Source Projects.pdf:application/pdf},
}

@article{yu_reviewer_2016,
	title = {Reviewer recommendation for pull-requests in {GitHub}: {What} can we learn from code review and bug assignment?},
	volume = {74},
	shorttitle = {Reviewer recommendation for pull-requests in {GitHub}},
	url = {https://www.sciencedirect.com/science/article/pii/S0950584916000069},
	urldate = {2025-03-05},
	journal = {Information and software technology},
	author = {Yu, Yue and Wang, Huaimin and Yin, Gang and Wang, Tao},
	year = {2016},
	note = {Publisher: Elsevier},
	keywords = {READ, CITE},
	pages = {204--218},
	file = {PDF:/home/georgefkd/Zotero/storage/5ZWRIAW3/Yu et al. - 2016 - Reviewer recommendation for pull-requests in GitHub What can we learn from code review and bug assi.pdf:application/pdf},
}

@article{teixeira_lessons_2015,
	title = {Lessons learned from applying social network analysis on an industrial {Free}/{Libre}/{Open} {Source} {Software} ecosystem},
	volume = {6},
	issn = {1867-4828, 1869-0238},
	url = {http://jisajournal.springeropen.com/articles/10.1186/s13174-015-0028-2},
	doi = {10.1186/s13174-015-0028-2},
	language = {en},
	number = {1},
	urldate = {2025-03-05},
	journal = {J Internet Serv Appl},
	author = {Teixeira, Jose and Robles, Gregorio and González-Barahona, Jesús M.},
	month = aug,
	year = {2015},
	keywords = {READ},
	pages = {14},
	file = {Available Version (via Google Scholar):/home/georgefkd/Zotero/storage/3CDHAN5D/Teixeira et al. - 2015 - Lessons learned from applying social network analysis on an industrial FreeLibreOpen Source Softwa.pdf:application/pdf},
}

@incollection{xu_application_2006,
	title = {Application of social network analysis to the study of open source software},
	url = {https://www.sciencedirect.com/science/article/pii/B9780444527691500123},
	urldate = {2025-03-05},
	booktitle = {The economics of open source software development},
	publisher = {Elsevier},
	author = {Xu, Jin and Christley, Scott and Madey, Gregory},
	year = {2006},
	keywords = {READ, CITE},
	pages = {247--269},
	file = {Available Version (via Google Scholar):/home/georgefkd/Zotero/storage/A6N9SVEX/Xu et al. - 2006 - Application of social network analysis to the study of open source software.pdf:application/pdf},
}

@article{long_social_2007,
	title = {Social network structures in open source software development teams},
	volume = {18},
	url = {https://www.igi-global.com/article/journal-database-management-jdm/3369},
	number = {2},
	urldate = {2025-03-05},
	journal = {Journal of Database Management (JDM)},
	author = {Long, Yuan and Siau, Keng},
	year = {2007},
	note = {Publisher: IGI Global},
	keywords = {CITE},
	pages = {25--40},
	file = {Available Version (via Google Scholar):/home/georgefkd/Zotero/storage/FHUVW8F6/Long and Siau - 2007 - Social network structures in open source software development teams.pdf:application/pdf},
}

@article{oehlers_graph_2021,
	title = {Graph {Metrics} for {Network} {Robustness}—{A} {Survey}},
	volume = {9},
	copyright = {https://creativecommons.org/licenses/by/4.0/},
	issn = {2227-7390},
	url = {https://www.mdpi.com/2227-7390/9/8/895},
	doi = {10.3390/math9080895},
	abstract = {Research on the robustness of networks, and in particular the Internet, has gained critical importance in recent decades because more and more individuals, societies and ﬁrms rely on this global network infrastructure for communication, knowledge transfer, business processes and e-commerce. In particular, modeling the structure of the Internet has inspired several novel graph metrics for assessing important topological robustness features of large complex networks. This survey provides a comparative overview of these metrics, presents their strengths and limitations for analyzing the robustness of the Internet topology, and outlines a conceptual tool set in order to facilitate their future adoption by Internet research and practice but also other areas of network science.},
	language = {en},
	number = {8},
	urldate = {2025-03-09},
	journal = {Mathematics},
	author = {Oehlers, Milena and Fabian, Benjamin},
	month = apr,
	year = {2021},
	keywords = {READ, CITE},
	pages = {895},
	file = {PDF:/home/georgefkd/Zotero/storage/MK88RVFI/Oehlers and Fabian - 2021 - Graph Metrics for Network Robustness—A Survey.pdf:application/pdf},
}

@inproceedings{zhang_using_2023,
	title = {Using large-scale heterogeneous graph representation learning for code review recommendations at {Microsoft}},
	url = {https://ieeexplore.ieee.org/abstract/document/10172555/},
	urldate = {2025-03-11},
	booktitle = {2023 {IEEE}/{ACM} 45th {International} {Conference} on {Software} {Engineering}: {Software} {Engineering} in {Practice} ({ICSE}-{SEIP})},
	publisher = {IEEE},
	author = {Zhang, Jiyang and Maddila, Chandra and Bairi, Ram and Bird, Christian and Raizada, Ujjwal and Agrawal, Apoorva and Jhawar, Yamini and Herzig, Kim and van Deursen, Arie},
	year = {2023},
	keywords = {TO-READ},
	pages = {162--172},
	file = {Available Version (via Google Scholar):/home/georgefkd/Zotero/storage/QB7YPAN6/Zhang et al. - 2023 - Using large-scale heterogeneous graph representation learning for code review recommendations at Mic.pdf:application/pdf},
}

@inproceedings{yang_mining_2016,
	address = {New York, NY, USA},
	series = {{MSR} '16},
	title = {Mining the modern code review repositories: a dataset of people, process and product},
	isbn = {978-1-4503-4186-8},
	shorttitle = {Mining the modern code review repositories},
	url = {https://dl.acm.org/doi/10.1145/2901739.2903504},
	doi = {10.1145/2901739.2903504},
	abstract = {In this paper, we present a collection of Modern Code Review data for five open source projects. The data showcases mined data from both an integrated peer review system and source code repositories. We present an easy-to-use and richer data structure to retrieve the (a) People, (b) Process, and (c) Product aspects of the peer review. This paper presents the extraction methodology, the dataset structure, and a collection of database dumps.},
	urldate = {2025-03-05},
	booktitle = {Proceedings of the 13th {International} {Conference} on {Mining} {Software} {Repositories}},
	publisher = {Association for Computing Machinery},
	author = {Yang, Xin and Kula, Raula Gaikovina and Yoshida, Norihiro and Iida, Hajimu},
	month = may,
	year = {2016},
	keywords = {TO-READ},
	pages = {460--463},
	file = {Full Text PDF:/home/georgefkd/Zotero/storage/4558LBAX/Yang et al. - 2016 - Mining the modern code review repositories a dataset of people, process and product.pdf:application/pdf},
}

@inproceedings{hamasaki_who_2013,
	title = {Who does what during a code review? {Datasets} of {OSS} peer review repositories},
	shorttitle = {Who does what during a code review?},
	url = {https://ieeexplore.ieee.org/abstract/document/6624003},
	doi = {10.1109/MSR.2013.6624003},
	abstract = {We present four datasets that are focused on the general roles of OSS peer review members. With data mined from both an integrated peer review system and code source repositories, our rich datasets comprise of peer review data that was automatically recorded. Using the Android project as a case study, we describe our extraction methodology, the datasets and their application used for three separate studies. Our datasets are available online at http://sdlab.naist.jp/reviewmining/.},
	urldate = {2025-03-05},
	booktitle = {2013 10th {Working} {Conference} on {Mining} {Software} {Repositories} ({MSR})},
	author = {Hamasaki, Kazuki and Kula, Raula Gaikovina and Yoshida, Norihiro and Cruz, A. E. Camargo and Fujiwara, Kenji and Iida, Hajimu},
	month = may,
	year = {2013},
	note = {ISSN: 2160-1860},
	keywords = {Software, Data mining, NAH, Open Source Software, Peer Review Repository Mining, Quality Assurance, Social network services},
	pages = {49--52},
	file = {Full Text PDF:/home/georgefkd/Zotero/storage/ADG54CMF/Hamasaki et al. - 2013 - Who does what during a code review Datasets of OSS peer review repositories.pdf:application/pdf;IEEE Xplore Abstract Record:/home/georgefkd/Zotero/storage/Q2QZMK47/6624003.html:text/html},
}

@incollection{afsarmanesh_who_2016,
	address = {Cham},
	title = {Who {Can} {Help} to {Review} {This} {Piece} of {Code}?},
	volume = {480},
	isbn = {978-3-319-45389-7 978-3-319-45390-3},
	url = {http://link.springer.com/10.1007/978-3-319-45390-3_25},
	language = {en},
	urldate = {2025-03-05},
	booktitle = {Collaboration in a {Hyperconnected} {World}},
	publisher = {Springer International Publishing},
	author = {Kerzazi, Noureddine and El Asri, Ikram},
	editor = {Afsarmanesh, Hamideh and Camarinha-Matos, Luis M. and Lucas Soares, António},
	year = {2016},
	doi = {10.1007/978-3-319-45390-3_25},
	note = {Series Title: IFIP Advances in Information and Communication Technology},
	keywords = {READ, CITE},
	pages = {289--301},
	file = {Available Version (via Google Scholar):/home/georgefkd/Zotero/storage/YZQN4QSA/Kerzazi and El Asri - 2016 - Who Can Help to Review This Piece of Code.pdf:application/pdf},
}

@inproceedings{yang_social_2014,
	address = {New York, NY, USA},
	series = {{FSE} 2014},
	title = {Social network analysis in open source software peer review},
	isbn = {978-1-4503-3056-5},
	url = {https://dl.acm.org/doi/10.1145/2635868.2661682},
	doi = {10.1145/2635868.2661682},
	abstract = {Software peer review (aka. code review) is regarded as one of the most important approaches to keep software quality and productivity. Due to the distributed collaborations and communication nature of Open Source Software (OSS), OSS review differs from traditional industry review. Unlike other related works, this study investigated OSS peer review pro- cesses from social perspective by using social network anal- ysis (SNA). We analyzed the review history from three typi- cal OSS projects. The results provide hints on relationships among the OSS reviewers which can help to understand how developers work and communicate with each other.},
	urldate = {2025-03-05},
	booktitle = {Proceedings of the 22nd {ACM} {SIGSOFT} {International} {Symposium} on {Foundations} of {Software} {Engineering}},
	publisher = {Association for Computing Machinery},
	author = {Yang, Xin},
	month = nov,
	year = {2014},
	keywords = {CITE},
	pages = {820--822},
	file = {Full Text PDF:/home/georgefkd/Zotero/storage/XKKRUXST/Yang - 2014 - Social network analysis in open source software peer review.pdf:application/pdf},
}

@article{ciancarini_how_2023,
	title = {How social interactions can affect {Modern} {Code} {Review}},
	volume = {5},
	url = {https://www.frontiersin.org/articles/10.3389/fcomp.2023.1178040/full},
	urldate = {2025-03-05},
	journal = {Frontiers in Computer Science},
	author = {Ciancarini, Paolo and Kruglov, Artem and Malikova, Aygul and Pedrycz, Witold and Succi, Giancarlo},
	year = {2023},
	note = {Publisher: Frontiers Media SA},
	keywords = {READ},
	pages = {1178040},
	file = {Available Version (via Google Scholar):/home/georgefkd/Zotero/storage/GNE8IT2K/Ciancarini et al. - 2023 - How social interactions can affect Modern Code Review.pdf:application/pdf},
}

@inproceedings{zhou_clustering_2010,
	address = {Sydney, Australia},
	title = {Clustering {Large} {Attributed} {Graphs}: {An} {Efficient} {Incremental} {Approach}},
	isbn = {978-1-4244-9131-5},
	shorttitle = {Clustering {Large} {Attributed} {Graphs}},
	url = {http://ieeexplore.ieee.org/document/5694023/},
	doi = {10.1109/ICDM.2010.41},
	abstract = {In recent years, many networks have become available for analysis, including social networks, sensor networks, biological networks, etc. Graph clustering has shown its effectiveness in analyzing and visualizing large networks. The goal of graph clustering is to partition vertices in a large graph into clusters based on various criteria such as vertex connectivity or neighborhood similarity. Many existing graph clustering methods mainly focus on the topological structures, but largely ignore the vertex properties which are often heterogeneous. Recently, a new graph clustering algorithm, SA-Cluster, has been proposed which combines structural and attribute similarities through a uniﬁed distance measure. SACluster performs matrix multiplication to calculate the random walk distances between graph vertices. As the edge weights are iteratively adjusted to balance the importance between structural and attribute similarities, matrix multiplication is repeated in each iteration of the clustering process to recalculate the random walk distances which are affected by the edge weight update.},
	language = {en},
	urldate = {2025-05-29},
	booktitle = {2010 {IEEE} {International} {Conference} on {Data} {Mining}},
	publisher = {IEEE},
	author = {Zhou, Yang and Cheng, Hong and Yu, Jeffrey Xu},
	month = dec,
	year = {2010},
	pages = {689--698},
	file = {PDF:/home/georgefkd/Zotero/storage/39N6E5DT/Zhou et al. - 2010 - Clustering Large Attributed Graphs An Efficient Incremental Approach.pdf:application/pdf},
}
